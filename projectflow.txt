Building pipeline:

1 - create a github repo and clone it in local (Add Experiment)
2 - add src folder along with all components
3 - add data, model, reports directories to gitignore file 
4 - now git add, commit, push

setting up DVC pipeline(without params)

5 - create DVC yaml file and add stages to it
6 - DVC init then do DVC repo to test the DVC pipeline automation
7 - now git add,commit and push

setting up dvc pipeline(with params)

8 - add params.yaml file
9 - add the params setup (mentioned below)
10 - Do 'dvc repro" again to test the pipeline along with the params
11 - now git add, commit, push








--------------------------------------------------------------------------------

params.yaml setup:
1 - import yaml
2 - add func:
  
    def load_params(params_path: str) -> dict:
    """Load parameters from a yaml file """
    try:
        with open(params_path,'r') as file:
            params = yaml.safe_load(file)
        logger.debug('parameters retrived from %s',params_path)
        return params
    except FileNotFoundError:
        logger.error('File not found: %s',params_path)
        raise
    except yaml.YAMLError as e:
        logger.error('YAML error: %s',e)
        raise
    except Exception as e:
        logger.error('unexpected error: %s',e)
        raise

3 - add to main():
      
      #data_ingestion -> params = load_params(params_path='params.yaml')
                                  test_size = params['data_ingestion']['test_size']
       
      #feature_engineering -> params = load_params(params_path='params.yaml')
                                       max_features = params['feature_engineering']['max_features']
                  
      #model_building -> params =   load_params('params.yaml')[;model_building]
                                    train_data = ['feature_engineering']['max_features']











